<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Addresses extends \App\Entity\Addresses implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'idAddress', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'isGroup', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'addressLabel', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'contactName', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'organisationName', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'departmentName', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'address1', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'address2', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'city', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'postCode', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'state', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'country', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'accessDetails', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'idUser', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'idGroup'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'idAddress', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'isGroup', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'addressLabel', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'contactName', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'organisationName', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'departmentName', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'address1', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'address2', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'city', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'postCode', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'state', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'country', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'accessDetails', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'idUser', '' . "\0" . 'App\\Entity\\Addresses' . "\0" . 'idGroup'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Addresses $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdAddress(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdAddress();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdAddress', []);

        return parent::getIdAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsGroup(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsGroup', []);

        return parent::getIsGroup();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsGroup(bool $isGroup): \App\Entity\Addresses
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsGroup', [$isGroup]);

        return parent::setIsGroup($isGroup);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddressLabel(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddressLabel', []);

        return parent::getAddressLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddressLabel(string $addressLabel): \App\Entity\Addresses
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddressLabel', [$addressLabel]);

        return parent::setAddressLabel($addressLabel);
    }

    /**
     * {@inheritDoc}
     */
    public function getContactName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContactName', []);

        return parent::getContactName();
    }

    /**
     * {@inheritDoc}
     */
    public function setContactName(?string $contactName): \App\Entity\Addresses
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContactName', [$contactName]);

        return parent::setContactName($contactName);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganisationName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganisationName', []);

        return parent::getOrganisationName();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganisationName(?string $organisationName): \App\Entity\Addresses
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganisationName', [$organisationName]);

        return parent::setOrganisationName($organisationName);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepartmentName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepartmentName', []);

        return parent::getDepartmentName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepartmentName(?string $departmentName): \App\Entity\Addresses
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepartmentName', [$departmentName]);

        return parent::setDepartmentName($departmentName);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress1(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress1', []);

        return parent::getAddress1();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress1(string $address1): \App\Entity\Addresses
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress1', [$address1]);

        return parent::setAddress1($address1);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress2(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress2', []);

        return parent::getAddress2();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress2(?string $address2): \App\Entity\Addresses
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress2', [$address2]);

        return parent::setAddress2($address2);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', []);

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity(string $city): \App\Entity\Addresses
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', [$city]);

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostCode(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostCode', []);

        return parent::getPostCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setPostCode(int $postCode): \App\Entity\Addresses
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostCode', [$postCode]);

        return parent::setPostCode($postCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getState(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', []);

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function setState(string $state): \App\Entity\Addresses
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', [$state]);

        return parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', []);

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry(string $country): \App\Entity\Addresses
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', [$country]);

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessDetails(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessDetails', []);

        return parent::getAccessDetails();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccessDetails(?string $accessDetails): \App\Entity\Addresses
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccessDetails', [$accessDetails]);

        return parent::setAccessDetails($accessDetails);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdUser(): ?\App\Entity\Users
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdUser', []);

        return parent::getIdUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdUser(?\App\Entity\Users $idUser): \App\Entity\Addresses
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdUser', [$idUser]);

        return parent::setIdUser($idUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdGroup(): ?\App\Entity\Groups
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdGroup', []);

        return parent::getIdGroup();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdGroup(?\App\Entity\Groups $idGroup): \App\Entity\Addresses
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdGroup', [$idGroup]);

        return parent::setIdGroup($idGroup);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
